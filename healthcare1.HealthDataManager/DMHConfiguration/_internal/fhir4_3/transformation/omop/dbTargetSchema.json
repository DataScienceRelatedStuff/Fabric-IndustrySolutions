[
    {
      "namespace": {
        "databaseName": "DataManagerForHealth"
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "It is assumed that every person with a different unique identifier is in fact a different person and should be treated independently."
              },
              "isNullable": false
            }
          },
          {
            "name": "gender_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is meant to capture the biological sex at birth of the Person. This field should not be used to study gender identity issues."
              },
              "isNullable": false
            }
          },
          {
            "name": "year_of_birth",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Compute age using year_of_birth."
              },
              "isNullable": false
            }
          },
          {
            "name": "month_of_birth",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "day_of_birth",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "birth_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "race_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field captures race or ethnic background of the person."
              },
              "isNullable": false
            }
          },
          {
            "name": "ethnicity_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field captures Ethnicity as defined by the Office of Management and Budget (OMB) of the US Government: it distinguishes only between \"Hispanic\" and \"Not Hispanic\". Races and ethnic backgrounds are not stored here."
              },
              "isNullable": false
            }
          },
          {
            "name": "location_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The location refers to the physical address of the person. This field should capture the last known location of the person. "
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Provider refers to the last known primary care provider (General Practitioner)."
              },
              "isNullable": true
            }
          },
          {
            "name": "care_site_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Care Site refers to where the Provider typically provides the primary care."
              },
              "isNullable": true
            }
          },
          {
            "name": "person_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to link back to persons in the source data. This is typically used for error checking of ETL logic."
              },
              "isNullable": true
            }
          },
          {
            "name": "gender_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is used to store the biological sex of the person from the source data. It is not intended for use in standard analytics but for reference only."
              },
              "isNullable": true
            }
          },
          {
            "name": "gender_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Due to the small number of options, this tends to be zero."
              },
              "isNullable": true
            }
          },
          {
            "name": "race_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is used to store the race of the person from the source data. It is not intended for use in standard analytics but for reference only."
              },
              "isNullable": true
            }
          },
          {
            "name": "race_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Due to the small number of options, this tends to be zero."
              },
              "isNullable": true
            }
          },
          {
            "name": "ethnicity_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is used to store the ethnicity of the person from the source data. It is not intended for use in standard analytics but for reference only."
              },
              "isNullable": true
            }
          },
          {
            "name": "ethnicity_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Due to the small number of options, this tends to be zero."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "person",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "person.cdm.json/person",
        "description": "This table serves as the central identity management for all Persons in the database. It contains records that uniquely identify each person or patient, and some demographic information. ",
        "displayName": "person",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "person_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"gender_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"race_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"ethnicity_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"location_id\", \"toAttribute\": \"location_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"location.cdm.json/location\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"care_site_id\", \"toAttribute\": \"care_site_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"care_site.cdm.json/care_site\"}, {\"joinPairs\": [{\"fromAttribute\": \"gender_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"race_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"ethnicity_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"person.cdm.json/person\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "observation_period_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Person can have multiple discrete Observation Periods which are identified by the Observation_Period_Id."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Person ID of the person record for which the Observation Period is recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "observation_period_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the start date of the Observation Period."
              },
              "isNullable": false
            }
          },
          {
            "name": "observation_period_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the end date of the period for which we can assume that all events for a Person are recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "period_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Observation Period as in whether the period was determined from an insurance enrollment file, EHR healthcare encounters, or other sources."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "observation_period",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "observation_period.cdm.json/observation_period",
        "description": "This table contains records which define spans of time during which two conditions are expected to hold: (i) Clinical Events that happened to the Person are recorded in the Event tables, and (ii) absense of records indicate such Events did not occur during this span of time.",
        "displayName": "observation_period",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "observation_period_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"observation_period.cdm.json/observation_period\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"period_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation_period.cdm.json/observation_period\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this to identify unique interactions between a person and the health care system. This identifier links across the other CDM event tables to associate events with a visit."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field contains a concept id representing the kind of visit, like inpatient or outpatient. All concepts in this field should be standard and belong to the Visit domain."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "For inpatient visits, the start date is typically the admission date. For outpatient visits the start date and end date will be the same."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "For inpatient visits the end date is typically the discharge date.  If a Person is still an inpatient in the hospital at the time of the data extract and does not have a visit_end_date, then set the visit_end_date to the date of the data pull."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "If a Person is still an inpatient in the hospital at the time of the data extract and does not have a visit_end_datetime, then set the visit_end_datetime to the datetime of the data pull."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to understand the provenance of the visit record, or where the record comes from."
              },
              "isNullable": false
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "There will only be one provider per visit record and the ETL document should clearly state how they were chosen (attending, admitting, etc.). If there are multiple providers associated with a visit in the source, this can be reflected in the event tables (condition_occurrence, procedure_occurrence, etc.) or in the visit_detail table."
              },
              "isNullable": true
            }
          },
          {
            "name": "care_site_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field provides information about the Care Site where the Visit took place."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the kind of visit that took place (inpatient, outpatient, emergency, etc.)"
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "admitted_from_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to determine where the patient was admitted from. This concept is part of the visit domain and can indicate if a patient was admitted to the hospital from a long-term care facility, for example."
              },
              "isNullable": true
            }
          },
          {
            "name": "admitted_from_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "discharged_to_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to determine where the patient was discharged to after a visit. This concept is part of the visit domain and can indicate if a patient was transferred to another hospital or sent to a long-term care facility, for example.  It is assumed that a person is discharged to home therefore there is not a standard concept id for \"home\".  Use concept id = 0 when a person is discharged to home."
              },
              "isNullable": true
            }
          },
          {
            "name": "discharged_to_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "preceding_visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to find the visit that occurred for the person prior to the given visit. There could be a few days or a few years in between."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "visit_occurrence",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "visit_occurrence.cdm.json/visit_occurrence",
        "description": "This table contains Events where Persons engage with the healthcare system for a duration of time. They are often also called \"Encounters\". Visits are defined by a configuration of circumstances under which they occur, such as (i) whether the patient comes to a healthcare institution, the other way around, or the interaction is remote, (ii) whether and what kind of trained medical staff is delivering the service during the Visit, and (iii) whether the Visit is transient or for a longer period involving a stay in bed. ",
        "displayName": "visit_occurrence",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "visit_occurrence_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"care_site_id\", \"toAttribute\": \"care_site_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"care_site.cdm.json/care_site\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"admitted_from_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"discharged_to_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"preceding_visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"visit_occurrence.cdm.json/visit_occurrence\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this to identify unique interactions between a person and the health care system. This identifier links across the other CDM event tables to associate events with a visit detail."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_detail_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field contains a concept id representing the kind of visit detail, like inpatient or outpatient. All concepts in this field should be standard and belong to the Visit domain."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_detail_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "This is the date of the start of the encounter. This may or may not be equal to the date of the Visit the Visit Detail is associated with."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_detail_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "This the end date of the patient-provider interaction.  If a Person is still an inpatient in the hospital at the time of the data extract and does not have a visit_end_date, then set the visit_end_date to the date of the data pull."
              },
              "isNullable": false
            }
          },
          {
            "name": "visit_detail_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "If a Person is still an inpatient in the hospital at the time of the data extract and does not have a visit_end_datetime, then set the visit_end_datetime to the datetime of the data pull."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to understand the provenance of the visit detail record, or where the record comes from."
              },
              "isNullable": false
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "There will only be one provider per  **visit** record and the ETL document should clearly state how they were chosen (attending, admitting, etc.). This is a typical reason for leveraging the visit_detail table as even though each visit_detail record can only have one provider, there is no limit to the number of visit_detail records that can be associated to a visit_occurrence record."
              },
              "isNullable": true
            }
          },
          {
            "name": "care_site_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field provides information about the Care Site where the Visit Detail took place."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the kind of visit detail that took place (inpatient, outpatient, emergency, etc.)"
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "admitted_from_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to determine where the patient was admitted from. This concept is part of the visit domain and can indicate if a patient was admitted to the hospital from a long-term care facility, for example."
              },
              "isNullable": true
            }
          },
          {
            "name": "admitted_from_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "discharged_to_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "discharged_to_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to determine where the patient was discharged to after a visit. This concept is part of the visit domain and can indicate if a patient was transferred to another hospital or sent to a long-term care facility, for example.  It is assumed that a person is discharged to home therefore there is not a standard concept id for \"home\".  Use concept id = 0 when a person is discharged to home."
              },
              "isNullable": true
            }
          },
          {
            "name": "preceding_visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to find the visit detail that occurred for the person prior to the given visit detail record. There could be a few days or a few years in between."
              },
              "isNullable": true
            }
          },
          {
            "name": "parent_visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to find the visit detail that subsumes the given visit detail record. This is used in the case that a visit detail record needs to be nested beyond the visit_occurrence/visit_detail relationship."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to link the visit_detail record to its visit_occurrence."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "visit_detail",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "visit_detail.cdm.json/visit_detail",
        "description": "The visit_detail table is an optional table used to represents details of each record in the parent visit_occurrence table. A good example of this would be the movement between units in a hospital during an inpatient stay or claim lines associated with a one insurance claim. For every record in the visit_occurrence table there may be 0 or more records in the visit_detail table with a 1:n relationship where n may be 0. The visit_detail table is structurally very similar to visit_occurrence table and belongs to the visit domain.",
        "displayName": "visit_detail",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "visit_detail_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"care_site_id\", \"toAttribute\": \"care_site_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"care_site.cdm.json/care_site\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"admitted_from_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"discharged_to_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"preceding_visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"parent_visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"visit_detail.cdm.json/visit_detail\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "condition_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to a condition record for a person. Refer to the ETL for how duplicate conditions during the same visit were handled."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the person for whom the condition is recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The condition_concept_id field is recommended for primary use in analyses, and must be used for network studies. This is the standard concept mapped from the source value which represents a condition"
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the start date of the condition"
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the end date of the condition"
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Condition record, as in whether the condition was from an EHR system, insurance claim, registry, or other sources."
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_status_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This concept represents the point during the visit the diagnosis was given (admitting diagnosis, final diagnosis), whether the diagnosis was determined due to laboratory findings, if the diagnosis was exclusionary, or if it was a preliminary diagnosis, among others. "
              },
              "isNullable": true
            }
          },
          {
            "name": "stop_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Stop Reason indicates why a Condition is no longer valid with respect to the purpose within the source data. Note that a Stop Reason does not necessarily imply that the condition is no longer occurring."
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The provider associated with condition record, e.g. the provider who made the diagnosis or the provider who recorded the symptom."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit during which the condition occurred."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit_detail record during which the condition occurred. For example, if the person was in the ICU at the time of the diagnosis the visit_occurrence record would reflect the overall hospital stay and the visit_detail record would reflect the ICU stay during the hospital visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the condition that occurred. For example, this could be an ICD10 or Read code."
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the condition source value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Condition necessary for a given analytic use case. Consider using condition_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "condition_status_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the condition status."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "condition_occurrence",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "condition_occurrence.cdm.json/condition_occurrence",
        "description": "This table contains records of Events of a Person suggesting the presence of a disease or medical condition stated as a diagnosis, a sign, or a symptom, which is either observed by a Provider or reported by the patient. ",
        "displayName": "condition_occurrence",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "condition_occurrence_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"condition_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"condition_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"condition_status_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"condition_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"condition_occurrence.cdm.json/condition_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "drug_exposure_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to records of drug dispensings or administrations for a person. Refer to the ETL for how duplicate drugs during the same visit were handled."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the person for whom the drug dispensing or administration is recorded. This may be a system generated code."
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The drug_concept_id field is recommended for primary use in analyses, and must be used for network studies. This is the standard concept mapped from the source concept id which represents a drug product or molecule otherwise introduced to the body. The drug concepts can have a varying degree of information about drug strength and dose. This information is relevant in the context of quantity and administration information in the subsequent fields plus strength information from the drug_strength table, provided as part of the standard vocabulary download."
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_exposure_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the start date of the drug record."
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_exposure_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "drug_exposure_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The drug_exposure_END_date denotes the day the drug exposure ended for the patient."
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_exposure_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "verbatim_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "This is the end date of the drug exposure as it appears in the source data, if it is given"
              },
              "isNullable": true
            }
          },
          {
            "name": "drug_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "You can use the type_concept_id to delineate between prescriptions written vs. prescriptions dispensed vs. medication history vs. patient-reported exposure, etc."
              },
              "isNullable": false
            }
          },
          {
            "name": "stop_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The reason a person stopped a medication as it is represented in the source. Reasons include regimen completed, changed, removed, etc. This field will be retired in v6.0."
              },
              "isNullable": true
            }
          },
          {
            "name": "refills",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is only filled in when the record is coming from a prescription written this field is meant to represent intended refills at time of the prescription."
              },
              "isNullable": true
            }
          },
          {
            "name": "quantity",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "days_supply",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "sig",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2048,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the verbatim instruction for the drug as written by the provider."
              },
              "isNullable": true
            }
          },
          {
            "name": "route_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "lot_number",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Provider associated with drug record, e.g. the provider who wrote the prescription or the provider who administered the drug."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Visit during which the drug was prescribed, administered or dispensed."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit_detail record during which the drug exposure occurred. For example, if the person was in the ICU at the time of the drug administration the visit_occurrence record would reflect the overall hospital stay and the visit_detail record would reflect the ICU stay during the hospital visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "drug_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the drug exposure that occurred. For example, this could be an NDC or Gemscript code."
              },
              "isNullable": true
            }
          },
          {
            "name": "drug_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the drug source value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Drug necessary for a given analytic use case. Consider using drug_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "route_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the drug route."
              },
              "isNullable": true
            }
          },
          {
            "name": "dose_unit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the dose unit of the drug given."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "drug_exposure",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "drug_exposure.cdm.json/drug_exposure",
        "description": "This table captures records about the exposure to a Drug ingested or otherwise introduced into the body. A Drug is a biochemical substance formulated in such a way that when administered to a Person it will exert a certain biochemical effect on the metabolism. Drugs include prescription and over-the-counter medicines, vaccines, and large-molecule biologic therapies. Radiological devices ingested or applied locally do not count as Drugs.",
        "displayName": "drug_exposure",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "drug_exposure_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"drug_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"drug_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"route_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"drug_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_exposure.cdm.json/drug_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "procedure_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to a procedure record for a person. Refer to the ETL for how duplicate procedures during the same visit were handled."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the person for whom the procedure is recorded. This may be a system generated code."
              },
              "isNullable": false
            }
          },
          {
            "name": "procedure_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The procedure_concept_id field is recommended for primary use in analyses, and must be used for network studies. This is the standard concept mapped from the source value which represents a procedure"
              },
              "isNullable": false
            }
          },
          {
            "name": "procedure_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the date the procedure started."
              },
              "isNullable": false
            }
          },
          {
            "name": "procedure_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this field to house the date that the procedure ended. "
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "Use this field to house the datetime that the procedure ended. "
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Procedure record, as in whether the procedure was from an EHR system, insurance claim, registry, or other sources."
              },
              "isNullable": false
            }
          },
          {
            "name": "modifier_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The modifiers are intended to give additional information about the procedure but as of now the vocabulary is under review."
              },
              "isNullable": true
            }
          },
          {
            "name": "quantity",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the quantity value is omitted, a single procedure is assumed."
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The provider associated with the procedure record, e.g. the provider who performed the Procedure."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit during which the procedure occurred."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit_detail record during which the Procedure occurred. For example, if the Person was in the ICU at the time of the Procedure the visit_occurrence record would reflect the overall hospital stay and the visit_detail record would reflect the ICU stay during the hospital visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the procedure that occurred. For example, this could be an CPT4 or opcs4 code."
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the procedure source value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Procedure necessary for a given analytic use case. Consider using procedure_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "modifier_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "procedure_occurrence",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "procedure_occurrence.cdm.json/procedure_occurrence",
        "description": "This table contains records of activities or processes ordered by, or carried out by, a healthcare provider on the patient with a diagnostic or therapeutic purpose.",
        "displayName": "procedure_occurrence",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "procedure_occurrence_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"procedure_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"procedure_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"modifier_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"procedure_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "device_exposure_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to records a person's exposure to a foreign physical object or instrument."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "device_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The device_concept_id field is recommended for primary use in analyses, and must be used for network studies. This is the standard concept mapped from the source concept id which represents a foreign object or instrument the person was exposed to. "
              },
              "isNullable": false
            }
          },
          {
            "name": "device_exposure_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the start date of the device record."
              },
              "isNullable": false
            }
          },
          {
            "name": "device_exposure_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "device_exposure_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The device_exposure_END_date denotes the day the device exposure ended for the patient, if given."
              },
              "isNullable": true
            }
          },
          {
            "name": "device_exposure_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "device_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "You can use the type_concept_id to denote the provenance of the record, as in whether the record is from administrative claims or EHR. "
              },
              "isNullable": false
            }
          },
          {
            "name": "unique_device_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the Unique Device Identification (UDI-DI) number for devices regulated by the FDA, if given. "
              },
              "isNullable": true
            }
          },
          {
            "name": "production_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the Production Identifier (UDI-PI) portion of the Unique Device Identification."
              },
              "isNullable": true
            }
          },
          {
            "name": "quantity",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Provider associated with device record, e.g. the provider who wrote the prescription or the provider who implanted the device."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Visit during which the device was prescribed or given."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Visit Detail during which the device was prescribed or given."
              },
              "isNullable": true
            }
          },
          {
            "name": "device_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the device exposure that occurred. For example, this could be an NDC or Gemscript code."
              },
              "isNullable": true
            }
          },
          {
            "name": "device_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the device source value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Device necessary for a given analytic use case. Consider using device_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "unit_source_values should be mapped to a Standard Concept in the Unit domain that best represents the unit as given in the source data. "
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the unit of the Device. For example, blood transfusions are considered devices and can be given in mL quantities. "
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the unit_source_value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Unit necessary for a given analytic use case. Consider using unit_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "device_exposure",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "device_exposure.cdm.json/device_exposure",
        "description": "The Device domain captures information about a person's exposure to a foreign physical object or instrument which is used for diagnostic or therapeutic purposes through a mechanism beyond chemical action. Devices include implantable objects (e.g. pacemakers, stents, artificial joints), medical equipment and supplies (e.g. bandages, crutches, syringes), other instruments used in medical procedures (e.g. sutures, defibrillators) and material used in clinical care (e.g. adhesives, body material, dental material, surgical material).",
        "displayName": "device_exposure",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "device_exposure_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"device_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"device_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"device_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"device_exposure.cdm.json/device_exposure\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "measurement_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to a Measurement record for a Person. Refer to the ETL for how duplicate Measurements during the same Visit were handled."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the Person for whom the Measurement is recorded. This may be a system generated code."
              },
              "isNullable": false
            }
          },
          {
            "name": "measurement_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The measurement_concept_id field is recommended for primary use in analyses, and must be used for network studies."
              },
              "isNullable": false
            }
          },
          {
            "name": "measurement_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Use this date to determine the date of the measurement."
              },
              "isNullable": false
            }
          },
          {
            "name": "measurement_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "measurement_time",
            "originDataTypeName": {
              "typeName": "string",
              "length": 10,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "measurement_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Measurement record, as in whether the measurement was from an EHR system, insurance claim, registry, or other sources."
              },
              "isNullable": false
            }
          },
          {
            "name": "operator_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The meaning of Concept [4172703](https://athena.ohdsi.org/search-terms/terms/4172703) for '=' is identical to omission of a operator_concept_id value. Since the use of this field is rare, it's important when devising analyses to not to forget testing for the content of this field for values different from =."
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_number",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the numerical value of the Result of the Measurement, if available. Note that measurements such as blood pressures will be split into their component parts i.e. one record for systolic, one record for diastolic."
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the raw data gives a categorial result for measurements those values are captured and mapped to standard concepts in the 'Meas Value' domain."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "There is currently no recommended unit for individual measurements, i.e. it is not mandatory to represent Hemoglobin a1C measurements as a percentage. unit_source_values should be mapped to a Standard Concept in the Unit domain that best represents the unit as given in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "range_low",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Ranges have the same unit as the value_AS_number. These ranges are provided by the source and should remain null if not given."
              },
              "isNullable": true
            }
          },
          {
            "name": "range_high",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Ranges have the same unit as the value_AS_number. These ranges are provided by the source and should remain null if not given."
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The provider associated with measurement record, e.g. the provider who ordered the test or the provider who recorded the result."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit during which the Measurement occurred."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit_detail record during which the Measurement occurred. For example, if the Person was in the ICU at the time the visit_occurrence record would reflect the overall hospital stay and the visit_detail record would reflect the ICU stay during the hospital visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "measurement_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the Measurement that occurred. For example, this could be an ICD10 or Read code."
              },
              "isNullable": true
            }
          },
          {
            "name": "measurement_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the measurement_source_value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Measurement necessary for a given analytic use case. Consider using measurement_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the unit of the Measurement that occurred. "
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "\"This is the concept representing the unit_source_value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Measurement necessary for a given analytic use case. Consider using unit_concept_id instead to enable standardized analytics that can be consistent across the network.\""
              },
              "isNullable": true
            }
          },
          {
            "name": "value_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim result value of the Measurement from the source data . "
              },
              "isNullable": true
            }
          },
          {
            "name": "measurement_event_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Measurement record is related to another record in the database, this field is the primary key of the linked record. "
              },
              "isNullable": true
            }
          },
          {
            "name": "meas_event_field_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Measurement record is related to another record in the database, this field is the concept_id that identifies which table the primary key of the linked record came from. "
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "measurement",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "measurement.cdm.json/measurement",
        "description": "The measurement table contains records of Measurements, i.e. structured values (numerical or categorical) obtained through systematic and standardized examination or testing of a Person or Person's sample. The measurement table contains both orders and results of such Measurements as laboratory tests, vital signs, quantitative findings from pathology reports, etc. Measurements are stored as attribute value pairs, with the attribute as the Measurement Concept and the value representing the result. The value can be a Concept (stored in value_AS_concept), or a numerical value (value_AS_number) with a Unit (unit_concept_id). The Procedure for obtaining the sample is housed in the procedure_occurrence table, though it is unnecessary to create a procedure_occurrence record for each measurement if one does not exist in the source data. Measurements differ from Observations in that they require a standardized test or some other activity to generate a quantitative or qualitative result. If there is no result, it is assumed that the lab test was conducted but the result was not captured.",
        "displayName": "measurement",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "measurement_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"measurement_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"measurement_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"operator_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"value_as_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"measurement_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"meas_event_field_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"measurement.cdm.json/measurement\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "observation_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to an Observation record for a Person. Refer to the ETL for how duplicate Observations during the same Visit were handled."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the Person for whom the Observation is recorded. This may be a system generated code."
              },
              "isNullable": false
            }
          },
          {
            "name": "observation_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The observation_concept_id field is recommended for primary use in analyses, and must be used for network studies."
              },
              "isNullable": false
            }
          },
          {
            "name": "observation_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date of the Observation. Depending on what the Observation represents this could be the date of a lab test, the date of a survey, or the date a patient's family history was taken. "
              },
              "isNullable": false
            }
          },
          {
            "name": "observation_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "observation_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Observation record, as in whether the measurement was from an EHR system, insurance claim, registry, or other sources."
              },
              "isNullable": false
            }
          },
          {
            "name": "value_as_number",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the numerical value of the Result of the Observation, if applicable and available. It is not expected that all Observations will have numeric results, rather, this field is here to house values should they exist. "
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_string",
            "originDataTypeName": {
              "typeName": "string",
              "length": 60,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the categorical value of the Result of the Observation, if applicable and available. "
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "It is possible that some records destined for the Observation table have two clinical ideas represented in one source code. This is common with ICD10 codes that describe a family history of some Condition, for example. In omop the Vocabulary breaks these two clinical ideas into two codes; one becomes the observation_concept_id and the other becomes the value_AS_concept_id. It is important when using the Observation table to keep this possibility in mind and to examine the value_AS_concept_id field for relevant information. "
              },
              "isNullable": true
            }
          },
          {
            "name": "qualifier_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field contains all attributes specifying the clinical fact further, such as as degrees, severities, drug-drug interaction alerts etc."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "There is currently no recommended unit for individual observation concepts. unit_source_values should be mapped to a Standard Concept in the Unit domain that best represents the unit as given in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The provider associated with the observation record, e.g. the provider who ordered the test or the provider who recorded the result."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit during which the Observation occurred."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The visit_detail record during which the Observation occurred. For example, if the Person was in the ICU at the time the visit_occurrence record would reflect the overall hospital stay and the visit_detail record would reflect the ICU stay during the hospital visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "observation_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the Observation that occurred. For example, this could be an ICD10 or Read code."
              },
              "isNullable": true
            }
          },
          {
            "name": "observation_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the concept representing the observation_source_value and may not necessarily be standard. This field is discouraged from use in analysis because it is not required to contain Standard Concepts that are used across the ohdsi community, and should only be used when Standard Concepts do not adequately represent the source detail for the Observation necessary for a given analytic use case. Consider using observation_concept_id instead to enable standardized analytics that can be consistent across the network."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the unit of the Observation that occurred. "
              },
              "isNullable": true
            }
          },
          {
            "name": "qualifier_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim value from the source data representing the qualifier of the Observation that occurred. "
              },
              "isNullable": true
            }
          },
          {
            "name": "value_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field houses the verbatim result value of the Observation from the source data.  Do not get confused with the Observation_source_value which captures source value of the observation mapped to observation_concept_id. This field is the observation result value from the source."
              },
              "isNullable": true
            }
          },
          {
            "name": "observation_event_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Observation record is related to another record in the database, this field is the primary key of the linked record. "
              },
              "isNullable": true
            }
          },
          {
            "name": "obs_event_field_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Observation record is related to another record in the database, this field is the concept_id that identifies which table the primary key of the linked record came from. "
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "observation",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "observation.cdm.json/observation",
        "description": "The observation table captures clinical facts about a Person obtained in the context of examination, questioning or a procedure. Any data that cannot be represented by any other domains, such as social and lifestyle facts, medical history, family history, etc. are recorded here.",
        "displayName": "observation",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "observation_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"observation_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"observation_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"value_as_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"qualifier_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"observation_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"obs_event_field_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"observation.cdm.json/observation\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "death_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date the person was deceased."
              },
              "isNullable": false
            }
          },
          {
            "name": "death_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "death_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the provenance of the death record, i.e., where it came from. It is possible that an administrative claims database would source death information from a government file so do not assume the Death Type is the same as the Visit Type, etc."
              },
              "isNullable": true
            }
          },
          {
            "name": "cause_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the Standard Concept representing the Person's cause of death, if available."
              },
              "isNullable": true
            }
          },
          {
            "name": "cause_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "cause_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "death",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "death.cdm.json/death",
        "description": "The death domain contains the clinical event for how and when a Person dies. A person can have up to one record if the source system contains evidence about the Death, such as: Condition in an administrative claim, status of enrollment into a health plan, or explicit record in EHR data.",
        "displayName": "death",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "person_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"death.cdm.json/death\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"death_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"death.cdm.json/death\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"cause_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"death.cdm.json/death\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"cause_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"death.cdm.json/death\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "note_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for each note."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "note_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date the note was recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "note_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "note_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The provenance of the note. Most likely this will be EHR. "
              },
              "isNullable": false
            }
          },
          {
            "name": "note_class_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Standard Concept Id representing the HL7 loinc\nDocument Type Vocabulary classification of the note."
              },
              "isNullable": false
            }
          },
          {
            "name": "note_title",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The title of the note."
              },
              "isNullable": true
            }
          },
          {
            "name": "note_text",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2048,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The content of the note."
              },
              "isNullable": false
            }
          },
          {
            "name": "encoding_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the Concept representing the character encoding type. "
              },
              "isNullable": false
            }
          },
          {
            "name": "language_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The language of the note. "
              },
              "isNullable": false
            }
          },
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Provider who wrote the note."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Visit during which the note was written. "
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_detail_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Visit Detail during which the note was written."
              },
              "isNullable": true
            }
          },
          {
            "name": "note_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "note_event_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Note record is related to another record in the database, this field is the primary key of the linked record. "
              },
              "isNullable": true
            }
          },
          {
            "name": "note_event_field_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "If the Note record is related to another record in the database, this field is the concept_id that identifies which table the primary key of the linked record came from. "
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "note",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "note.cdm.json/note",
        "description": "The note table captures unstructured information that was recorded by a provider about a patient in free text (in ascii, or preferably in UTF8 format) notes on a given date. The type of note_text is clob or varchar(MAX) depending on rdbms. ",
        "displayName": "note",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "note_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"note_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"note_class_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"encoding_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"language_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"provider_id\", \"toAttribute\": \"provider_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"provider.cdm.json/provider\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_detail_id\", \"toAttribute\": \"visit_detail_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"visit_detail.cdm.json/visit_detail\"}, {\"joinPairs\": [{\"fromAttribute\": \"note_event_field_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note.cdm.json/note\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "note_nlp_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for the NLP record."
              },
              "isNullable": false
            }
          },
          {
            "name": "note_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the note_id for the note record the NLP record is associated to."
              },
              "isNullable": false
            }
          },
          {
            "name": "section_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "snippet",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A small window of text surrounding the term"
              },
              "isNullable": true
            }
          },
          {
            "name": "offset",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Character offset of the extracted term in the input note"
              },
              "isNullable": true
            }
          },
          {
            "name": "lexical_variant",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Raw text extracted from the NLP tool."
              },
              "isNullable": false
            }
          },
          {
            "name": "note_nlp_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "note_nlp_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "nlp_system",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "nlp_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date of the note processing."
              },
              "isNullable": false
            }
          },
          {
            "name": "nlp_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "The date and time of the note processing."
              },
              "isNullable": true
            }
          },
          {
            "name": "term_exists",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "term_temporal",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "term_modifiers",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2000,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "note_nlp",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "note_nlp.cdm.json/note_nlp",
        "description": "The note_nlp table encodes all output of NLP on clinical notes. Each row represents a single extracted term from a note.",
        "displayName": "note_nlp",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "note_nlp_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"note_id\", \"toAttribute\": \"note_id\"}], \"fromEntity\": \"note_nlp.cdm.json/note_nlp\", \"toEntity\": \"note.cdm.json/note\"},{\"joinPairs\": [{\"fromAttribute\": \"section_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note_nlp.cdm.json/note_nlp\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"note_nlp_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note_nlp.cdm.json/note_nlp\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"note_nlp_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"note_nlp.cdm.json/note_nlp\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "specimen_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Unique identifier for each specimen."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person from whom the specimen is collected."
              },
              "isNullable": false
            }
          },
          {
            "name": "specimen_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "specimen_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "specimen_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date the specimen was collected."
              },
              "isNullable": false
            }
          },
          {
            "name": "specimen_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "quantity",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The amount of specimen collected from the person."
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unit for the quantity of the specimen."
              },
              "isNullable": true
            }
          },
          {
            "name": "anatomic_site_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the site on the body where the specimen is from."
              },
              "isNullable": true
            }
          },
          {
            "name": "disease_status_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "specimen_source_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the identifier for the specimen from the source system. "
              },
              "isNullable": true
            }
          },
          {
            "name": "specimen_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "unit_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "anatomic_site_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "disease_status_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "specimen",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "specimen.cdm.json/specimen",
        "description": "The specimen domain contains the records identifying biological samples from a person.",
        "displayName": "specimen",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "specimen_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"specimen_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"specimen_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"anatomic_site_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"disease_status_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"specimen.cdm.json/specimen\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "domain_concept_id_1",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "fact_id_1",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "domain_concept_id_2",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "fact_id_2",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "relationship_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "fact_relationship",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "fact_relationship.cdm.json/fact_relationship",
        "description": "The fact_relationship table contains records about the relationships between facts stored as records in any table of the CDM. Relationships can be defined between facts from the same domain, or different domains. Examples of Fact Relationships include: [Person relationships](https://athena.ohdsi.org/search-terms/terms?domain=Relationship&standardConcept=Standard&page=2&pageSize=15&query=) (parent-child), care site relationships (hierarchical organizational structure of facilities within a health system), indication relationship (between drug exposures and associated conditions), usage relationships (of devices during the course of an associated procedure), or facts derived from one another (measurements derived from an associated specimen).",
        "displayName": "fact_relationship",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"domain_concept_id_1\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"fact_relationship.cdm.json/fact_relationship\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"domain_concept_id_2\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"fact_relationship.cdm.json/fact_relationship\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"relationship_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"fact_relationship.cdm.json/fact_relationship\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "location_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to a unique Location."
              },
              "isNullable": false
            }
          },
          {
            "name": "address_1",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the first line of the address."
              },
              "isNullable": true
            }
          },
          {
            "name": "address_2",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the second line of the address"
              },
              "isNullable": true
            }
          },
          {
            "name": "city",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "state",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "zip",
            "originDataTypeName": {
              "typeName": "string",
              "length": 9,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "county",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "location_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "country_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the country. Values should conform to the [Geography](https://athena.ohdsi.org/search-terms/terms?domain=Geography&standardConcept=Standard&page=1&pageSize=15&query=&boosts) domain. "
              },
              "isNullable": true
            }
          },
          {
            "name": "country_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 80,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name of the country."
              },
              "isNullable": true
            }
          },
          {
            "name": "latitude",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "longitude",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "location",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "location.cdm.json/location",
        "description": "The location table represents a generic way to capture physical location or address information of Persons and Care Sites.",
        "displayName": "location",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "location_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"country_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"location.cdm.json/location\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "care_site_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "care_site_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name of the care_site as it appears in the source data"
              },
              "isNullable": true
            }
          },
          {
            "name": "place_of_service_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is a high-level way of characterizing a Care Site. Typically, however, Care Sites can provide care in multiple settings (inpatient, outpatient, etc.) and this granularity should be reflected in the visit."
              },
              "isNullable": true
            }
          },
          {
            "name": "location_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The location_id from the location table representing the physical location of the care_site."
              },
              "isNullable": true
            }
          },
          {
            "name": "care_site_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The identifier of the care_site as it appears in the source data. This could be an identifier separate from the name of the care_site."
              },
              "isNullable": true
            }
          },
          {
            "name": "place_of_service_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "care_site",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "care_site.cdm.json/care_site",
        "description": "The care_site table contains a list of uniquely identified institutional (physical or organizational) units where healthcare delivery is practiced (offices, wards, hospitals, clinics, etc.).",
        "displayName": "care_site",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "care_site_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"place_of_service_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"care_site.cdm.json/care_site\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"location_id\", \"toAttribute\": \"location_id\"}], \"fromEntity\": \"care_site.cdm.json/care_site\", \"toEntity\": \"location.cdm.json/location\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "provider_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "It is assumed that every provider with a different unique identifier is in fact a different person and should be treated independently."
              },
              "isNullable": false
            }
          },
          {
            "name": "provider_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "npi",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the National Provider Number issued to health care providers in the US by the Centers for Medicare and Medicaid Services (CMS)."
              },
              "isNullable": true
            }
          },
          {
            "name": "dea",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the identifier issued by the DEA, a US federal agency, that allows a provider to write prescriptions for controlled substances."
              },
              "isNullable": true
            }
          },
          {
            "name": "specialty_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field either represents the most common specialty that occurs in the data or the most specific concept that represents all specialties listed, should the provider have more than one. This includes physician specialties such as internal medicine, emergency medicine, etc. and allied health professionals such as nurses, midwives, and pharmacists."
              },
              "isNullable": true
            }
          },
          {
            "name": "care_site_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the care_site_id for the location that the provider primarily practices in."
              },
              "isNullable": true
            }
          },
          {
            "name": "year_of_birth",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "gender_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field represents the recorded gender of the provider in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "provider_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to link back to providers in the source data. This is typically used for error checking of ETL logic."
              },
              "isNullable": true
            }
          },
          {
            "name": "specialty_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the kind of provider or specialty as it appears in the source data. This includes physician specialties such as internal medicine, emergency medicine, etc. and allied health professionals such as nurses, midwives, and pharmacists."
              },
              "isNullable": true
            }
          },
          {
            "name": "specialty_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is often zero as many sites use proprietary codes to store physician speciality."
              },
              "isNullable": true
            }
          },
          {
            "name": "gender_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is provider's gender as it appears in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "gender_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is often zero as many sites use proprietary codes to store provider gender."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "provider",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "provider.cdm.json/provider",
        "description": "The provider table contains a list of uniquely identified healthcare providers. These are individuals providing hands-on healthcare to patients, such as physicians, nurses, midwives, physical therapists etc.",
        "displayName": "provider",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "provider_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"specialty_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"provider.cdm.json/provider\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"care_site_id\", \"toAttribute\": \"care_site_id\"}], \"fromEntity\": \"provider.cdm.json/provider\", \"toEntity\": \"care_site.cdm.json/care_site\"}, {\"joinPairs\": [{\"fromAttribute\": \"gender_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"provider.cdm.json/provider\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"specialty_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"provider.cdm.json/provider\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"gender_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"provider.cdm.json/provider\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "payer_plan_period_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for each unique combination of a Person, Payer, Plan, and Period of time."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Person covered by the Plan."
              },
              "isNullable": false
            }
          },
          {
            "name": "payer_plan_period_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "Start date of Plan coverage."
              },
              "isNullable": false
            }
          },
          {
            "name": "payer_plan_period_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "End date of Plan coverage."
              },
              "isNullable": false
            }
          },
          {
            "name": "payer_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field represents the organization who reimburses the provider which administers care to the Person."
              },
              "isNullable": true
            }
          },
          {
            "name": "payer_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the Payer as it appears in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "payer_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "plan_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field represents the specific health benefit Plan the Person is enrolled in."
              },
              "isNullable": true
            }
          },
          {
            "name": "plan_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the health benefit Plan of the Person as it appears in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "plan_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "sponsor_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field represents the sponsor of the Plan who finances the Plan. This includes self-insured, small group health plan and large group health plan."
              },
              "isNullable": true
            }
          },
          {
            "name": "sponsor_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Plan sponsor as it appears in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "sponsor_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "family_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The common identifier for all people (often a family) that covered by the same policy."
              },
              "isNullable": true
            }
          },
          {
            "name": "stop_reason_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field represents the reason the Person left the Plan, if known."
              },
              "isNullable": true
            }
          },
          {
            "name": "stop_reason_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Plan stop reason as it appears in the source data."
              },
              "isNullable": true
            }
          },
          {
            "name": "stop_reason_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "payer_plan_period",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "payer_plan_period.cdm.json/payer_plan_period",
        "description": "The payer_plan_period table captures details of the period of time that a Person is continuously enrolled under a specific health Plan benefit structure from a given Payer. Each Person receiving healthcare is typically covered by a health benefit plan, which pays for (fully or partially), or directly provides, the care. These benefit plans are provided by payers, such as health insurances or state or government agencies. In each plan the details of the health benefits are defined for the Person or her family, and the health benefit Plan might change over time typically with increasing utilization (reaching certain cost thresholds such as deductibles), plan availability and purchasing choices of the Person. The unique combinations of Payer organizations, health benefit Plans and time periods in which they are valid for a Person are recorded in this table.",
        "displayName": "payer_plan_period",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "payer_plan_period_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"payer_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"payer_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"plan_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"plan_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"sponsor_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"sponsor_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"stop_reason_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"stop_reason_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"payer_plan_period.cdm.json/payer_plan_period\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "cost_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "cost_event_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "cost_domain_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "cost_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "currency_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "total_charge",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "total_cost",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "total_paid",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_by_payer",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_by_patient",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_patient_copay",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_patient_coinsurance",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_patient_deductible",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_by_primary",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_ingredient_cost",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "paid_dispensing_fee",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "payer_plan_period_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "amount_allowed",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "revenue_code_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "revenue_code_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Revenue codes are a method to charge for a class of procedures and conditions in the U.S. hospital system."
              },
              "isNullable": true
            }
          },
          {
            "name": "drg_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "drg_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 3,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Diagnosis Related Groups are US codes used to classify hospital cases into one of approximately 500 groups. "
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "cost",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "cost.cdm.json/cost",
        "description": "The cost table captures records containing the cost of any medical event recorded in one of the omop clinical event tables such as drug_exposure, procedure_occurrence, visit_occurrence, visit_detail, device_occurrence, observation or measurement.\n\nEach record in the cost table account for the amount of money transacted for the clinical event. So, the cost table may be used to represent both receivables (charges) and payments (paid), each transaction type represented by its cost_concept_id. The cost_type_concept_id field will use concepts in the Standardized Vocabularies to designate the source (provenance) of the cost data. A reference to the health plan information in the payer_plan_period table is stored in the record for information used for the adjudication system to determine the persons benefit for the clinical event.",
        "displayName": "cost",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "cost_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"cost_domain_id\", \"toAttribute\": \"domain_id\"}], \"fromEntity\": \"cost.cdm.json/cost\", \"toEntity\": \"domain.cdm.json/domain\"}, {\"joinPairs\": [{\"fromAttribute\": \"cost_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cost.cdm.json/cost\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"currency_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cost.cdm.json/cost\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"revenue_code_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cost.cdm.json/cost\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"drg_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cost.cdm.json/cost\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "drug_era_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the specific drug ingredient."
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_era_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_era_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_exposure_count",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "gap_days",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "drug_ERA",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "drug_ERA.cdm.json/drug_ERA",
        "description": "A Drug Era is defined as a span of time when the Person is assumed to be exposed to a particular active ingredient. A Drug Era is not the same as a Drug Exposure: Exposures are individual records corresponding to the source when Drug was delivered to the Person, while successive periods of Drug Exposures are combined under certain rules to produce continuous Drug Eras.",
        "displayName": "drug_ERA",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "drug_era_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"drug_ERA.cdm.json/drug_ERA\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"drug_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_ERA.cdm.json/drug_ERA\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "dose_era_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "drug_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the specific drug ingredient."
              },
              "isNullable": false
            }
          },
          {
            "name": "unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the unit of the specific drug ingredient."
              },
              "isNullable": false
            }
          },
          {
            "name": "dose_value",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The numeric value of the dosage of the drug_ingredient."
              },
              "isNullable": false
            }
          },
          {
            "name": "dose_era_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date the Person started on the specific dosage, with at least 31 days since any prior exposure."
              },
              "isNullable": false
            }
          },
          {
            "name": "dose_era_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "dose_ERA",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "dose_ERA.cdm.json/dose_ERA",
        "description": "A Dose Era is defined as a span of time when the Person is assumed to be exposed to a constant dose of a specific active ingredient.",
        "displayName": "dose_ERA",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "dose_era_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"dose_ERA.cdm.json/dose_ERA\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"drug_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"dose_ERA.cdm.json/dose_ERA\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"dose_ERA.cdm.json/dose_ERA\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "condition_era_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the Condition."
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_era_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The start date for the Condition Era\nconstructed from the individual\ninstances of Condition Occurrences.\nIt is the start date of the very first\nchronologically recorded instance of\nthe condition with at least 31 days since any prior record of the same Condition. "
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_era_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The end date for the Condition Era\nconstructed from the individual\ninstances of Condition Occurrences.\nIt is the end date of the final\ncontinuously recorded instance of the\nCondition."
              },
              "isNullable": false
            }
          },
          {
            "name": "condition_occurrence_count",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The number of individual Condition\nOccurrences used to construct the\ncondition era."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "condition_ERA",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "condition_ERA.cdm.json/condition_ERA",
        "description": "A Condition Era is defined as a span of time when the Person is assumed to have a given condition. Similar to Drug Eras, Condition Eras are chronological periods of Condition Occurrence. Combining individual Condition Occurrences into a single Condition Era serves two purposes:\n\n- It allows aggregation of chronic conditions that require frequent ongoing care, instead of treating each Condition Occurrence as an independent event.\n- It allows aggregation of multiple, closely timed doctor visits for the same Condition to avoid double-counting the Condition Occurrences.\nFor example, consider a Person who visits her Primary Care Physician (PCP) and who is referred to a specialist. At a later time, the Person visits the specialist, who confirms the PCP's original diagnosis and provides the appropriate treatment to resolve the condition. These two independent doctor visits should be aggregated into one Condition Era.",
        "displayName": "condition_ERA",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "condition_era_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"condition_ERA.cdm.json/condition_ERA\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"condition_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"condition_ERA.cdm.json/condition_ERA\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "episode_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for each Episode."
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the person for whom the episode is recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The episode_concept_id represents the kind abstraction related to the disease phase, outcome or treatment."
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the Episode beings. "
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_start_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "The date and time when the Episode begins."
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the instance of the Episode is considered to have ended."
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_end_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": "The date when the instance of the Episode is considered to have ended."
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_parent_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to find the Episode that subsumes the given Episode record. This is used in the case that an Episode are nested into each other."
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_number",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "For sequences of episodes, this is used to indicate the order the episodes occurred. For example, lines of treatment could be indicated here. "
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_object_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Standard Concept representing the disease phase, outcome, or other abstraction of which the episode consists.  For example, if the episode_concept_id is [treatment regimen](https://athena.ohdsi.org/search-terms/terms/32531) then the episode_object_concept_id should contain the chemotherapy regimen concept, like [Afatinib monotherapy](https://athena.ohdsi.org/search-terms/terms/35804392). "
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field can be used to determine the provenance of the Episode record, as in whether the episode was from an EHR system, insurance claim, registry, or other sources."
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_source_value",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The source code for the Episdoe as it appears in the source data. This code is mapped to a Standard Condition Concept in the Standardized Vocabularies and the original code is stored here for reference."
              },
              "isNullable": true
            }
          },
          {
            "name": "episode_source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key to a Episode Concept that refers to the code used in the source."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "episode",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "episode.cdm.json/episode",
        "description": "The episode table aggregates lower-level clinical events (visit_occurrence, drug_exposure, procedure_occurrence, device_exposure) into a higher-level abstraction representing clinically and analytically relevant disease phases,outcomes and treatments. The episode_event table connects qualifying clinical events (visit_occurrence, drug_exposure, procedure_occurrence, device_exposure) to the appropriate episode entry. For example cancers including their development over time, their treatment, and final resolution. ",
        "displayName": "episode",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "episode_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"episode.cdm.json/episode\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"episode_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"episode.cdm.json/episode\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"episode_object_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"episode.cdm.json/episode\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"episode_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"episode.cdm.json/episode\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"episode_source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"episode.cdm.json/episode\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "episode_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Use this field to link the episode_event record to its episode."
              },
              "isNullable": false
            }
          },
          {
            "name": "event_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is the primary key of the linked record in the database. For example, if the Episode Event is a Condition Occurrence, then the condition_occurrence_id of the linked record goes in this field. "
              },
              "isNullable": false
            }
          },
          {
            "name": "episode_event_field_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field is the concept_id that identifies which table the primary key of the linked record came from. "
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "episode_event",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "episode_event.cdm.json/episode_event",
        "description": "The episode_event table connects qualifying clinical events (such as condition_occurrence, drug_exposure, procedure_occurrence, measurement) to the appropriate episode entry. For example, linking the precise location of the metastasis (cancer modifier in measurement) to the disease episode. ",
        "displayName": "episode_event",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"episode_id\", \"toAttribute\": \"episode_id\"}], \"fromEntity\": \"episode_event.cdm.json/episode_event\", \"toEntity\": \"episode.cdm.json/episode\"}, {\"joinPairs\": [{\"fromAttribute\": \"episode_event_field_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"episode_event.cdm.json/episode_event\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "metadata_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key given to a Metadata record."
              },
              "isNullable": false
            }
          },
          {
            "name": "metadata_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "metadata_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "value_as_string",
            "originDataTypeName": {
              "typeName": "string",
              "length": 250,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "value_as_number",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the numerical value of the result of the Metadata, if applicable and available. It is not expected that all Metadata will have numeric results, rather, this field is here to house values should they exist. "
              },
              "isNullable": true
            }
          },
          {
            "name": "metadata_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "metadata_datetime",
            "originDataTypeName": {
              "typeName": "timestamp",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "timestampFormat": "yyyy-MM-ddTHH:mm:ssZ",
                "description": ""
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "metadata",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "metadata.cdm.json/metadata",
        "description": "The metadata table contains metadata information about a dataset that has been transformed to the omop Common Data Model.",
        "displayName": "metadata",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "metadata_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"metadata_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"metadata.cdm.json/metadata\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"metadata_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"metadata.cdm.json/metadata\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"value_as_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"metadata.cdm.json/metadata\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "cdm_source_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name of the CDM instance."
              },
              "isNullable": false
            }
          },
          {
            "name": "cdm_source_abbreviation",
            "originDataTypeName": {
              "typeName": "string",
              "length": 25,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The abbreviation of the CDM instance."
              },
              "isNullable": false
            }
          },
          {
            "name": "cdm_holder",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The holder of the CDM instance."
              },
              "isNullable": false
            }
          },
          {
            "name": "source_description",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2048,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The description of the CDM instance."
              },
              "isNullable": true
            }
          },
          {
            "name": "source_documentation_reference",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "cdm_etl_reference",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "source_release_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The release date of the source data."
              },
              "isNullable": false
            }
          },
          {
            "name": "cdm_release_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The release data of the CDM instance."
              },
              "isNullable": false
            }
          },
          {
            "name": "cdm_version",
            "originDataTypeName": {
              "typeName": "string",
              "length": 10,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": true
            }
          },
          {
            "name": "cdm_version_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id representing the version of the CDM."
              },
              "isNullable": false
            }
          },
          {
            "name": "vocabulary_version",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "CDM_source",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "CDM_source.cdm.json/CDM_source",
        "description": "The CDM_source table contains detail about the source database and the process used to transform the data into the omop Common Data Model.",
        "displayName": "CDM_source",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"cdm_version_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"CDM_source.cdm.json/CDM_source\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for each Concept across all domains."
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "An unambiguous, meaningful and descriptive name for the Concept."
              },
              "isNullable": false
            }
          },
          {
            "name": "domain_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key to the [domain](https://ohdsi.github.io/CommonDataModel/cdm531.html#domain) table the Concept belongs to."
              },
              "isNullable": false
            }
          },
          {
            "name": "vocabulary_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key to the [vocabulary](https://ohdsi.github.io/CommonDataModel/cdm531.html#vocabulary)\ntable indicating from which source the\nConcept has been adapted."
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_class_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The attribute or concept class of the\nConcept. Examples are 'Clinical Drug',\n'Ingredient', 'Clinical Finding' etc."
              },
              "isNullable": false
            }
          },
          {
            "name": "standard_concept",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This flag determines where a Concept is\na Standard Concept, i.e. is used in the\ndata, a Classification Concept, or a\nnon-standard Source Concept. The\nallowable values are 'S' (Standard\nConcept) and 'C' (Classification\nConcept), otherwise the content is null."
              },
              "isNullable": true
            }
          },
          {
            "name": "concept_code",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The concept code represents the identifier\nof the Concept in the source vocabulary,\nsuch as snomed-CT concept IDs,\nRxNorm rxcuis etc. Note that concept\ncodes are not unique across vocabularies."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the Concept was first\nrecorded. The default value is\n1-Jan-1970, meaning, the Concept has no\n(known) date of inception."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the Concept became\ninvalid because it was deleted or\nsuperseded (updated) by a new concept.\nThe default value is 31-Dec-2099,\nmeaning, the Concept is valid until it\nbecomes deprecated."
              },
              "isNullable": false
            }
          },
          {
            "name": "invalid_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Reason the Concept was invalidated.\nPossible values are D (deleted), U\n(replaced with an update) or null when\nvalid_end_date has the default value."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "concept",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "concept.cdm.json/concept",
        "description": "The Standardized Vocabularies contains records, or Concepts, that uniquely identify each fundamental unit of meaning used to express clinical information in all domain tables of the CDM. Concepts are derived from vocabularies, which represent clinical information across a domain (e.g. conditions, drugs, procedures) through the use of codes and associated descriptions. Some Concepts are designated Standard Concepts, meaning these Concepts can be used as normative expressions of a clinical entity within the omop Common Data Model and within standardized analytics. Each Standard Concept belongs to one domain, which defines the location where the Concept would be expected to occur within data tables of the CDM.\n\nConcepts can represent broad categories (like 'Cardiovascular disease'), detailed clinical elements ('Myocardial infarction of the anterolateral wall') or modifying characteristics and attributes that define Concepts at various levels of detail (severity of a disease, associated morphology, etc.).\n\nRecords in the Standardized Vocabularies tables are derived from national or international vocabularies such as snomed-CT, RxNorm, and loinc, or custom Concepts defined to cover various aspects of observational data analysis. ",
        "displayName": "concept",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "concept_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"domain_id\", \"toAttribute\": \"domain_id\"}], \"fromEntity\": \"concept.cdm.json/concept\", \"toEntity\": \"domain.cdm.json/domain\"}, {\"joinPairs\": [{\"fromAttribute\": \"vocabulary_id\", \"toAttribute\": \"vocabulary_id\"}], \"fromEntity\": \"concept.cdm.json/concept\", \"toEntity\": \"vocabulary.cdm.json/vocabulary\"}, {\"joinPairs\": [{\"fromAttribute\": \"concept_class_id\", \"toAttribute\": \"concept_class_id\"}], \"fromEntity\": \"concept.cdm.json/concept\", \"toEntity\": \"concept_class.cdm.json/concept_class\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "vocabulary_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique identifier for each Vocabulary, such\nas ICD9CM, snomed, Visit."
              },
              "isNullable": false
            }
          },
          {
            "name": "vocabulary_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name describing the vocabulary, for\nexample, International Classification of\nDiseases, Ninth Revision, Clinical\nModification, Volume 1 and 2 (nchs) etc."
              },
              "isNullable": false
            }
          },
          {
            "name": "vocabulary_reference",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "External reference to documentation or\navailable download of the about the\nvocabulary."
              },
              "isNullable": true
            }
          },
          {
            "name": "vocabulary_version",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Version of the Vocabulary as indicated in\nthe source."
              },
              "isNullable": true
            }
          },
          {
            "name": "vocabulary_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Concept that represents the Vocabulary the vocabulary record belongs to."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "vocabulary",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "vocabulary.cdm.json/vocabulary",
        "description": "The vocabulary table includes a list of the Vocabularies collected from various sources or created de novo by the omop community. This reference table is populated with a single record for each Vocabulary source and includes a descriptive name and other associated attributes for the Vocabulary.",
        "displayName": "vocabulary",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "vocabulary_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"vocabulary_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"vocabulary.cdm.json/vocabulary\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "domain_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique key for each domain."
              },
              "isNullable": false
            }
          },
          {
            "name": "domain_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name describing the Domain, e.g.\nCondition, Procedure, Measurement\netc."
              },
              "isNullable": false
            }
          },
          {
            "name": "domain_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Concept representing the Domain Concept the domain record belongs to."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "domain",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "domain.cdm.json/domain",
        "description": "The domain table includes a list of omop-defined Domains the Concepts of the Standardized Vocabularies can belong to. A Domain defines the set of allowable Concepts for the standardized fields in the CDM tables. For example, the \"Condition\" Domain contains Concepts that describe a condition of a patient, and these Concepts can only be stored in the condition_concept_id field of the condition_occurrence and condition_ERA tables. This reference table is populated with a single record for each Domain and includes a descriptive name for the Domain.",
        "displayName": "domain",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "domain_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"domain_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"domain.cdm.json/domain\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "concept_class_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A unique key for each class."
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_class_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The name describing the Concept Class, e.g.\nClinical Finding, Ingredient, etc."
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_class_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A Concept that represents the Concept Class."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "concept_class",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "concept_class.cdm.json/concept_class",
        "description": "The concept_class table is a reference table, which includes a list of the classifications used to differentiate Concepts within a given Vocabulary. This reference table is populated with a single record for each Concept Class.",
        "displayName": "concept_class",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "concept_class_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"concept_class_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_class.cdm.json/concept_class\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "concept_id_1",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_id_2",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "relationship_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The relationship between concept_id_1 and concept_id_2. Please see the [Vocabulary Conventions](https://ohdsi.github.io/CommonDataModel/dataModelConventions.html#concept_relationships). for more information. "
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the relationship is first recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the relationship is invalidated."
              },
              "isNullable": false
            }
          },
          {
            "name": "invalid_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Reason the relationship was invalidated. Possible values are 'D' (deleted), 'U' (updated) or null. "
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "concept_relationship",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "concept_relationship.cdm.json/concept_relationship",
        "description": "The concept_relationship table contains records that define direct relationships between any two Concepts and the nature or type of the relationship. Each type of a relationship is defined in the relationship table.",
        "displayName": "concept_relationship",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"concept_id_1\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_relationship.cdm.json/concept_relationship\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"concept_id_2\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_relationship.cdm.json/concept_relationship\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"relationship_id\", \"toAttribute\": \"relationship_id\"}], \"fromEntity\": \"concept_relationship.cdm.json/concept_relationship\", \"toEntity\": \"relationship.cdm.json/relationship\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "relationship_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The type of relationship captured by the\nrelationship record."
              },
              "isNullable": false
            }
          },
          {
            "name": "relationship_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "is_hierarchical",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Defines whether a relationship defines\nconcepts into classes or hierarchies. Values\nare 1 for hierarchical relationship or 0 if not."
              },
              "isNullable": false
            }
          },
          {
            "name": "defines_ancestry",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Defines whether a hierarchical relationship\ncontributes to the concept_ancestor table.\nThese are subsets of the hierarchical\nrelationships. Valid values are 1 or 0."
              },
              "isNullable": false
            }
          },
          {
            "name": "reverse_relationship_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The identifier for the relationship used to\ndefine the reverse relationship between two\nconcepts."
              },
              "isNullable": false
            }
          },
          {
            "name": "relationship_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key that refers to an identifier in\nthe [concept](https://ohdsi.github.io/CommonDataModel/cdm531.html#concept) table for the unique\nrelationship concept."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "relationship",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "relationship.cdm.json/relationship",
        "description": "The relationship table provides a reference list of all types of relationships that can be used to associate any two concepts in the concept_relationshp table.",
        "displayName": "relationship",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "relationship_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"relationship_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"relationship.cdm.json/relationship\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "concept_synonym_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1000,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "language_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "concept_synonym",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "concept_synonym.cdm.json/concept_synonym",
        "description": "The concept_synonym table is used to store alternate names and descriptions for Concepts.",
        "displayName": "concept_synonym",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_synonym.cdm.json/concept_synonym\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"language_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_synonym.cdm.json/concept_synonym\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "ancestor_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id for the higher-level concept\nthat forms the ancestor in the relationship."
              },
              "isNullable": false
            }
          },
          {
            "name": "descendant_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept Id for the lower-level concept\nthat forms the descendant in the\nrelationship."
              },
              "isNullable": false
            }
          },
          {
            "name": "min_levels_of_separation",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The minimum separation in number of\nlevels of hierarchy between ancestor and\ndescendant concepts. This is an attribute\nthat is used to simplify hierarchic analysis."
              },
              "isNullable": false
            }
          },
          {
            "name": "max_levels_of_separation",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The maximum separation in number of\nlevels of hierarchy between ancestor and\ndescendant concepts. This is an attribute\nthat is used to simplify hierarchic analysis."
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "concept_ancestor",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "concept_ancestor.cdm.json/concept_ancestor",
        "description": "The concept_ancestor table is designed to simplify observational analysis by providing the complete hierarchical relationships between Concepts. Only direct parent-child relationships between Concepts are stored in the concept_relationship table. To determine higher level ancestry connections, all individual direct relationships would have to be navigated at analysis time. The concept_ancestor table includes records for all parent-child relationships, as well as grandparent-grandchild relationships and those of any other level of lineage. Using the concept_ancestor table allows for querying for all descendants of a hierarchical concept. For example, drug ingredients and drug products are all descendants of a drug class ancestor.\n\nThis table is entirely derived from the concept, concept_relationship and relationship tables.",
        "displayName": "concept_ancestor",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"ancestor_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_ancestor.cdm.json/concept_ancestor\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"descendant_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"concept_ancestor.cdm.json/concept_ancestor\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "source_code",
            "originDataTypeName": {
              "typeName": "string",
              "length": 50,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The source code being translated\ninto a Standard Concept."
              },
              "isNullable": false
            }
          },
          {
            "name": "source_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key to the Source\nConcept that is being translated\ninto a Standard Concept."
              },
              "isNullable": false
            }
          },
          {
            "name": "source_vocabulary_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A foreign key to the\nvocabulary table defining the\nvocabulary of the source code that\nis being translated to a Standard\nConcept."
              },
              "isNullable": false
            }
          },
          {
            "name": "source_code_description",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "An optional description for the\nsource code. This is included as a\nconvenience to compare the\ndescription of the source code to\nthe name of the concept."
              },
              "isNullable": true
            }
          },
          {
            "name": "target_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The target Concept\nto which the source code is being\nmapped."
              },
              "isNullable": false
            }
          },
          {
            "name": "target_vocabulary_id",
            "originDataTypeName": {
              "typeName": "string",
              "length": 20,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Vocabulary of the target Concept."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the mapping\ninstance was first recorded."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the mapping\ninstance became invalid because it\nwas deleted or superseded\n(updated) by a new relationship.\nDefault value is 31-Dec-2099."
              },
              "isNullable": false
            }
          },
          {
            "name": "invalid_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Reason the mapping instance was invalidated. Possible values are D (deleted), U (replaced with an update) or null when valid_end_date has the default value."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "source_TO_concept_MAP",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "source_TO_concept_MAP.cdm.json/source_TO_concept_MAP",
        "description": "The source to concept map table is a legacy data structure within the omop Common Data Model, recommended for use in ETL processes to maintain local source codes which are not available as Concepts in the Standardized Vocabularies, and to establish mappings for each source code into a Standard Concept as target_concept_ids that can be used to populate the Common Data Model tables. The source_TO_concept_MAP table is no longer populated with content within the Standardized Vocabularies published to the omop community.",
        "displayName": "source_TO_concept_MAP",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"source_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"source_TO_concept_MAP.cdm.json/source_TO_concept_MAP\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"target_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"source_TO_concept_MAP.cdm.json/source_TO_concept_MAP\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"target_vocabulary_id\", \"toAttribute\": \"vocabulary_id\"}], \"fromEntity\": \"source_TO_concept_MAP.cdm.json/source_TO_concept_MAP\", \"toEntity\": \"vocabulary.cdm.json/vocabulary\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "drug_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept representing the Branded Drug or Clinical Drug Product."
              },
              "isNullable": false
            }
          },
          {
            "name": "ingredient_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept representing the active ingredient contained within the drug product."
              },
              "isNullable": false
            }
          },
          {
            "name": "amount_value",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The numeric value or the amount of active ingredient contained within the drug product."
              },
              "isNullable": true
            }
          },
          {
            "name": "amount_unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept representing the Unit of measure for the amount of active ingredient contained within the drug product. "
              },
              "isNullable": true
            }
          },
          {
            "name": "numerator_value",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The concentration of the active ingredient contained within the drug product."
              },
              "isNullable": true
            }
          },
          {
            "name": "numerator_unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept representing the Unit of measure for the concentration of active ingredient."
              },
              "isNullable": true
            }
          },
          {
            "name": "denominator_value",
            "originDataTypeName": {
              "typeName": "decimal",
              "length": 18,
              "precision": 18,
              "scale": 8,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The amount of total liquid (or other divisible product, such as ointment, gel, spray, etc.)."
              },
              "isNullable": true
            }
          },
          {
            "name": "denominator_unit_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The Concept representing the denominator unit for the concentration of active ingredient."
              },
              "isNullable": true
            }
          },
          {
            "name": "box_size",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The number of units of Clinical Branded Drug or Quantified Clinical or Branded Drug contained in a box as dispensed to the patient."
              },
              "isNullable": true
            }
          },
          {
            "name": "valid_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when the Concept was first\nrecorded. The default value is\n1-Jan-1970."
              },
              "isNullable": false
            }
          },
          {
            "name": "valid_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date when then Concept became invalid."
              },
              "isNullable": false
            }
          },
          {
            "name": "invalid_reason",
            "originDataTypeName": {
              "typeName": "string",
              "length": 1,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Reason the concept was invalidated. Possible values are D (deleted), U (replaced with an update) or null when valid_end_date has the default value."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "drug_strength",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "drug_strength.cdm.json/drug_strength",
        "description": "The drug_strength table contains structured content about the amount or concentration and associated units of a specific ingredient contained within a particular drug product. This table is supplemental information to support standardized analysis of drug utilization.",
        "displayName": "drug_strength",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"drug_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_strength.cdm.json/drug_strength\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"ingredient_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_strength.cdm.json/drug_strength\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"amount_unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_strength.cdm.json/drug_strength\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"numerator_unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_strength.cdm.json/drug_strength\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"denominator_unit_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"drug_strength.cdm.json/drug_strength\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "cohort_definition_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "subject_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_start_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_end_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": ""
              },
              "isNullable": false
            }
          }
        ]
      },
      "name": "cohort",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "cohort.cdm.json/cohort",
        "description": "The cohort table contains records of subjects that satisfy a given set of criteria for a duration of time. The definition of the cohort is contained within the cohort_definition table. It is listed as part of the results schema because it is a table that users of the database as well as tools such as atlas need to be able to write to. The CDM and Vocabulary tables are all read-only so it is suggested that the cohort and cohort_defintion tables are kept in a separate schema to alleviate confusion.",
        "displayName": "cohort",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "cohort_definition_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This is the identifier given to the cohort, usually by the atlas application"
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_definition_name",
            "originDataTypeName": {
              "typeName": "string",
              "length": 255,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A short description of the cohort"
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_definition_description",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2048,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "A complete description of the cohort."
              },
              "isNullable": true
            }
          },
          {
            "name": "definition_type_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Type defining what kind of Cohort Definition the record represents and how the syntax may be executed."
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_definition_syntax",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2048,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Syntax or code to operationalize the Cohort Definition."
              },
              "isNullable": true
            }
          },
          {
            "name": "subject_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "This field contains a Concept that represents the domain of the subjects that are members of the cohort (e.g., Person, Provider, Visit)."
              },
              "isNullable": false
            }
          },
          {
            "name": "cohort_initiation_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "A date to indicate when the Cohort was initiated in the cohort table."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "cohort_definition",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "cohort_definition.cdm.json/cohort_definition",
        "description": "The cohort_definition table contains records defining a Cohort derived from the data through the associated description and syntax and upon instantiation (execution of the algorithm) placed into the cohort table. Cohorts are a set of subjects that satisfy a given combination of inclusion criteria for a duration of time. The cohort_definition table provides a standardized structure for maintaining the rules governing the inclusion of a subject into a cohort, and can store operational programming code to instantiate the cohort within the omop Common Data Model.",
        "displayName": "cohort_definition",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"definition_type_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cohort_definition.cdm.json/cohort_definition\", \"toEntity\": \"concept.cdm.json/concept\"}, {\"joinPairs\": [{\"fromAttribute\": \"subject_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"cohort_definition.cdm.json/cohort_definition\", \"toEntity\": \"concept.cdm.json/concept\"}]"
      }
    },
    {
      "namespace": {
        "databaseName": ""
      },
      "tableType": "EXTERNAL",
      "storageDescriptor": {
        "columns": [
          {
            "name": "image_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key is given to an imaging study record"
              },
              "isNullable": false
            }
          },
          {
            "name": "person_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The person_id of the Person for whom the procedure is recorded. This may be a systemgenerated code."
              },
              "isNullable": true
            }
          },
          {
            "name": "procedure_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key is given to a procedure record for a person. Link to the Procedure_occurrence table."
              },
              "isNullable": true
            }
          },
          {
            "name": "visit_occurrence_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "The unique key is given to the visit record for a person. Link to the Visit_occurrence table."
              },
              "isNullable": true
            }
          },
          {
            "name": "anatomic_site_concept_id",
            "originDataTypeName": {
              "typeName": "integer",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Anatomical location of the imaging procedure by the medical acquisition device (gross anatomy). It maps the ANATOMIC_SITE_SOURCE_VALUE to a Standard Concept in the Spec Anatomic Site domain. This should be coded at the lowest level of granularity."
              },
              "isNullable": true
            }
          },
          {
            "name": "local_path",
            "originDataTypeName": {
              "typeName": "string",
              "length": 2000,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "Universal Naming Convention (UNC) path to the folder containing the image object file access via a storage block access protocol."
              },
              "isNullable": true
            }
          },
          {
            "name": "image_occurrence_date",
            "originDataTypeName": {
              "typeName": "date",
              "properties": {
                "minValue": null,
                "maxValue": null,
                "dateFormat": "yyyy-MM-dd",
                "description": "The date the imaging procedure occurred."
              },
              "isNullable": true
            }
          },
          {
            "name": "image_study_uid",
            "originDataTypeName": {
              "typeName": "string",
              "length": 100,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "DICOM Study UID."
              },
              "isNullable": true
            }
          },
          {
            "name": "image_series_uid",
            "originDataTypeName": {
              "typeName": "string",
              "length": 100,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "DICOM Series UID."
              },
              "isNullable": true
            }
          },
          {
            "name": "modality",
            "originDataTypeName": {
              "typeName": "string",
              "length": 100,
              "properties": {
                "minValue": null,
                "maxValue": null,
                "description": "DICOM-defined value (e.g., US, CT, MR, PT, DR, CR, NM)."
              },
              "isNullable": true
            }
          }
        ]
      },
      "name": "image_occurrence",
      "entityType": "TABLE",
      "properties": {
        "businessArea": "",
        "path": "image_occurrence.cdm.json/image_occurrence",
        "description": "This table captures imaging study data at series level.",
        "displayName": "image_occurrence",
        "isDay0Entity": "False",
        "fromBusinessAreas": "",
        "primaryKeys": "image_occurrence_id",
        "industries": "",
        "relationships": "[{\"joinPairs\": [{\"fromAttribute\": \"person_id\", \"toAttribute\": \"person_id\"}], \"fromEntity\": \"image_occurrence.cdm.json/image_occurrence\", \"toEntity\": \"person.cdm.json/person\"}, {\"joinPairs\": [{\"fromAttribute\": \"visit_occurrence_id\", \"toAttribute\": \"visit_occurrence_id\"}], \"fromEntity\": \"image_occurrence.cdm.json/image_occurrence\", \"toEntity\": \"visit_occurrence.cdm.json/visit_occurrence\"},{\"joinPairs\": [{\"fromAttribute\": \"anatomic_site_concept_id\", \"toAttribute\": \"concept_id\"}], \"fromEntity\": \"image_occurrence.cdm.json/image_occurrence\", \"toEntity\": \"concept.cdm.json/concept\"},{\"joinPairs\": [{\"fromAttribute\": \"procedure_occurrence_id\", \"toAttribute\": \"procedure_occurrence_id\"}], \"fromEntity\": \"image_occurrence.cdm.json/image_occurrence\", \"toEntity\": \"procedure_occurrence.cdm.json/procedure_occurrence\"}]"
      }
    }
  ]